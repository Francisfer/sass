.homes {
  // background-color: $color-secondary; testing
  grid-column: center-start / center-end;
  margin: 15rem 0;

  // The technique is the same as in the features. we want as many columns as fit in the container, each should have a minimum of 25rem and can go as far as 1fr.
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(25rem, 1fr));
  gap: 7rem;
}

.home {
  background-color: $color-grey-light-1;

  display: grid;
  grid-template-columns: repeat(2, 1fr);
  row-gap: 3.5rem;

  &__img {
    width: 100%;
    grid-column: 1 / -1;
    grid-row: 1 / 2;
    z-index: 2;
  }

  &__like {
    grid-column: 2 / 3;
    grid-row: 1 / 2;
    height: 2.5rem;
    width: 2.5rem;
    fill: $color-primary;
    z-index: 3;
    justify-self: end;
    margin: 1rem;
  }

  &__name {
    font-family: $font-display;
    font-size: 1.6rem;
    text-align: center;
    padding: 1.25rem;
    background-color: $color-secondary;
    color: $color-white;
    font-weight: 400;
    width: 80%;
    grid-column: 1 / -1;
    grid-row: 1 / 2;
    z-index: 3;
    justify-self: center;
    align-self: end;
    transform: translateY(50%);
  }

  &__location,
  &__rooms {
    margin-top: 2.5rem;
  }
  // The code for location, rooms, area and price is going to be the same, remember that we only have the svg and the paragraph.
  &__location,
  &__rooms,
  &__area,
  &__price {
    font-size: 1.5rem;
    margin-left: 2rem;
    display: flex;
    align-items: center;

    svg {
      height: 2rem;
      width: 2rem;
      fill: $color-primary;
      margin-right: 1rem;
    }

    // We don't need the paragraph because the font-size get's inherited from the rule above.
  }

  &__btn {
    grid-column: 1 / -1;
  }
}
