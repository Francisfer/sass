.container {
  background-color: #eee;
  width: 1000px;
  margin: 30px auto;
  display: grid;

  /* grid-template-rows: 150px 150px; */
  /* row-gap: 30px; */
  /* grid-template-columns: 150px 150px 150px; */
  /* column-gap: 30px; */
  /* gap: 30px; */

  grid-template-rows: repeat(2, 150px);
  grid-template-columns: repeat(3, 1fr);
  gap: 30px;
}

.item {
  padding: 20px;
  font-size: 30px;
  font-family: sans-serif;
  color: white;
}

.item--1 {
  background-color: orangered;
  /* grid-row-start: 2;
  grid-row-end: 3;
  grid-column-start: 2;
  grid-column-end: 3; */
  grid-row: 2 / 3;
  grid-column: 2 / 3;
  z-index: 1;
}
.item--2 {
  background-color: yellowgreen;
}
.item--3 {
  background-color: blueviolet;
  grid-column: 1 / 3;
  /* spanning this element creates a new line because we explicitly placed the orange one. so it tries to find a new place. Unless we also specify the row in which it should stay */
  grid-row: 2 / 3;
  /* Now the orange is behind in the z index. This means that we can have multiple grid items in the same cell. */
}
.item--4 {
  background-color: palevioletred;
  /* grid-column: 1 / span 3; */
  grid-column: 2 / -1;
}
.item--5 {
  background-color: royalblue;
  /* grid-row: 1 / 2;
  grid-column: 3 / 4; */
  grid-area: 1 / 3 / 3 / 4;
}
.item--6 {
  background-color: goldenrod;
  /* grid-row: 1 / 2;
  grid-column: 2 / 3; */
  grid-area: 1 / 2 / 2 / 3;
}

/* CHALLENGE - My code */

/* body {
  padding: 50px;
  font-size: 30px;
  font-family: sans-serif;
}
.challenge {
  color: white;
  width: 1000px;
  height: 750px;
  background-color: white;
  margin: 0 auto;
  display: grid;

  grid-template-columns: repeat(3, 1fr) 180px;
  grid-template-rows: 1fr 200px 300px 1fr;
  gap: 30px;
}

.grid__item {
  background-color: red;
  padding: 10px;
  font-weight: 600;
}

.header {
  grid-column: 1 / -1;
}

.sidebar {
  grid-column: 4 / -1;
  grid-row: 2 / 4;
}
.main {
  grid-column: 1 / 4;
}
.footer {
  grid-column: 1 / -1;
} */

/* SECOND GRID */

.container1 {
  width: 1000px;
  margin: 30px auto;
  background-color: #ddd;

  display: grid;
  grid-template-rows: repeat(2, 150px);
  grid-template-columns: repeat(2, 1fr);
  gap: 30px;

  /* implicit grid */
  grid-auto-rows: 80px;
  grid-auto-flow: row;
  grid-auto-columns: 80px;

  /* aligning the grid items to grid areas */
  align-items: center;
  justify-items: center;

  /* aligning the grid tracks to grid container */
}

.itemNow {
  padding: 20px;
  color: white;
  font-family: sans-serif;
  font-size: 30px;
  background-color: orangered;
}

.item---4 {
  background-color: crimson;
  grid-row: 2 / span 3;
  align-self: start;
  justify-self: end;
}
.item---7 {
  background-color: palevioletred;
  grid-column: 1 / -1;
}
