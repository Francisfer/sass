// OVERALL CONTAINER
.container {
  // Used max-width so that the container's width can decrease if here is not enough space (the viewport is smaller) to display 120rem.
  max-width: 120rem;
  margin: 8rem auto; // Old trick to center the container
  background-color: var(--color-grey-light-1);
  // x, y, blur radius, spread radius
  box-shadow: var(--shadow-dark);
  min-height: 50rem; // While building - testing
}

// HEADER
.header {
  height: 7rem;
  background-color: var(--color-white);
  border-bottom: var(--line);
  display: flex;
  justify-content: space-between;
  align-items: center;
  font-size: 1.4rem; // We overwritten the font-size here so we could inherit this size in the placeholder of the search bar. This way all the header can inherit this value.
}

// SIDE BAR LEFT AND HOTEL VIEW RIGHT

.content {
  display: flex;
}

.sidebar {
  background-color: var(--color-grey-dark-1);
  // grow, shrink, basis (WIDTH) - if we set the width to a percentage it actually makes sense that we don't want it to shrink, that will happen automatically.
  flex: 0 0 18%;
  display: flex;
  flex-direction: column;
  justify-content: space-between;
}

.hotel-view {
  background-color: var(--color-white);
  // We've established a width to the sidebar, now we want the hotel view to occupy all the remaining space. Instead of doing the same thing with 82% we use flex grow.
  flex: 1;

  // height: 80rem; // test while coding everything.
}

// HOTEL VIEW - description left and reviews right
.detail {
  font-size: 1.4rem; // This way all the child elements inherit.
  padding: 4.5rem; // Same as the margin right of the description (space between both elements) in order to be visually correct.
  display: flex;
  // Remember that with margin the background wouldn't work.
  background-color: var(--color-grey-light-1);
  border-bottom: var(--line);
}

.description {
  background-color: var(--color-white);
  box-shadow: var(--shadow-light);
  padding: 3rem;
  // font-size: 1.4rem; default font-size for the container. We want the same font-size for the description and the user-reviews, so we set it on their parent element which is the detail.

  // Usually when we use percentages for the basis we set the other two to 0.
  flex: 0 0 60%; // Basis is the width REMEMBER
  margin-right: 4.5rem; // space between them, notice that here the background color still the same. REMEMBER
}

.user-reviews {
  flex: 1; // Grow to occupy the rest of the space.
  // font-size: 1.4rem; We want the same font-size for the description and the user-reviews, so we set it on their parent element which is the detail.

  // To align the button
  display: flex;
  flex-direction: column;
  align-items: center;
}
