.popup {
  height: 100vh;
  width: 100%;
  position: fixed;
  top: 0;
  left: 0;
  background-color: rgba($color-black, 0.8);
  z-index: 9999;

  // display: none; // Not a solution, otherwise we can't style it.
  opacity: 0;
  visibility: hidden;
  transition: all 0.3s;

  &__content {
    width: 75%;
    background-color: $color-white;
    box-shadow: 0 2rem 4rem rgba($color-black, 0.2);
    border-radius: 3px;
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%) scale(0.25);
    display: table;
    overflow: hidden;

    // For the popup effects - this is the initial state. the scale down is added to the previous transform, otherwise it's overwritten.
    opacity: 1;
    transition: all 0.5s 0.2s; // The last value is the delay, so that the background appears slightly first
  }

  // Left and right contend
  &__left {
    width: 33.333333%; // What matters is that both sides make roughly 100%
    // float: left;
    display: table-cell;
  }
  &__right {
    width: 66.666667%;
    // float: left;

    // When it comes to the part of placing left and right side by side he uses floats to the left on both. That works, however the sides have different heights, because the right one occupies the space that it needs. in order to fix the problem and make the height the same on both sides we use display to table-cell. on the parent the display is table
    display: table-cell;

    // however the content still needs to be fixed because this right container content goes to the end of the page and stays weirs, we need to use
    vertical-align: middle;

    // After this is just the regular adjustments
    padding: 3rem 5rem;
  }
  &__img {
    display: block; // One in each line
    width: 100%; // Of the parent left
  }
  &__text {
    font-size: 1.4rem;
    margin-bottom: 4rem; //space between the button and the text, the rest of the spaces between elements is done with the utilities classes.

    // For the text columns
    -moz-column-count: 2;
    -moz-column-gap: 4rem;
    -moz-column-rule: 1px solid $color-grey-light-2;

    column-count: 2;
    column-gap: 4rem; // Default 1em = 14px because of the font-size of 1.4rem that we have in this container
    column-rule: 1px solid $color-grey-light-2; // Like a border in the middle of the columns

    //for the hyphens - it is necessary to have in account the language. the only problem with this is that we need to give it a lot of prefixes in order to function correctly in all browsers. The same with the columns.

    -moz-hyphens: auto; // Mozilla
    -ms-hyphens: auto; // Edge
    -webkit-hyphens: auto; // Safari and chrome
    hyphens: auto;
  }

  // When the target is on the popup, in other words, when the pseudo element target is available on this element, do this:
  &:target {
    opacity: 1;
    visibility: visible;
  }

  // To give that zoom effect like its going towards the user. so we want to style the content when the target is the popup:
  &:target &__content {
    opacity: 1;
    transform: translate(-50%, -50%) scale(1);
  }

  // The button to close the popup
  &__close {
    &:link,
    &:visited {
      color: $color-grey-dark;
      position: absolute;
      top: 2.5rem;
      right: 2.5rem;
      font-size: 3rem;
      text-decoration: none;
      display: inline-block;
      transition: all 0.2s;
      line-height: 1; // Because this is text, and the element becomes much higher that wider, so we just decrease a bit the line height
    }

    &:hover {
      color: $color-primary;
    }
  }
}
