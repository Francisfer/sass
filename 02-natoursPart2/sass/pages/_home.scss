// Remember that all the sections are display block (occupy the entire width of the viewport)

.section-about {
  background-color: $color-grey-light-1;
  padding: 25rem 0; // We give a padding of 25 so after we can pull the element up with the difference between 95 - 75 (header polygon) with negative margin top:
  margin-top: -20vh;

  @include respond(tab-port) {
    padding: 20rem 0;
  }
}

.section-features {
  padding: 20rem 0; // Is trendy to have lots of vertical space on pages.

  background-image: linear-gradient(
      to right bottom,
      rgba($color-primary-light, 0.8),
      rgba($color-primary-dark, 0.8)
    ),
    url("/img/nat-4.jpg");
  background-size: cover;

  // To skew the entire section with another technique other than clip-path with the polygon.
  // Not only the technique is different but also the output, if you notice in the original, the image is skewed to the left (so in the y axis).

  transform: skewY(-7deg);
  // But, like this, we also skew the cards. Also we need to get rid of the space that appears on the left (we need to pull the section up)

  // To put the cards together we just skew them in the opposite direction, but we do it here for future corrections purposes.
  // There is no class named section-features__row, also. we cannot create a selector outside of this one for the row, otherwise all the rows that we might have in the project are going to be skewed.

  // The solution is use the DIRECT CHILD SELECTOR. So ampersand, direct child (>) and the direct child that we want to select are all (*). In this case is just one, the row
  & > * {
    transform: skewY(7deg);
  }

  // Now to pull the section

  margin-top: -12.6rem; // Trial and error on the console, in he's case -10 px were enough, but in my screen it was not.

  @include respond(tab-port) {
    padding: 10rem 0;
  }
}

.section-tours {
  background-color: $color-grey-light-1;
  padding: 25rem 0 15rem 0; // margin bottom so we can code the cards better, started with 50rem.
  margin-top: -13rem; // To move it up

  @include respond(tab-port) {
    padding: 20rem 0 10rem 0;
  }
}

.section-stories {
  // background-color: $color-grey-light-1; we don't want because of the video, however if still active, the z index with a negative value would't work because of it.
  padding: 15rem 0;
  position: relative; // For the video

  @include respond(tab-port) {
    padding: 10rem 0;
  }
}

.section-book {
  padding: 15rem 0;
  background-image: linear-gradient(
    to right bottom,
    $color-primary-light,
    $color-primary-dark
  );

  @include respond(tab-port) {
    padding: 10rem 0;
  }
}

.book {
  // In order to make the shape, we could add another element and use clip-path to create the effect. However, this effect is also nothing more than another background color that we have on top of the image (a gradient that starts in one side and suddenly we change to a transparent color). So let's explore the gradient function a bit more.

  // We already know that we can specify the direction of the gradient literally (to right, to left) but also in degrees. That is the first thing that we are doing. Rotating 90 degrees means rotate in the x axis.
  // Now, the most important part is that we can specify percentages after the colors, that is the same of saying that at each point of the gradient, which colors there should be.
  // In our case, we want the white to start at 0% (on the left) and, also at 50%, so in the middle, we want transparent. The trick is to set the white color to also be at 50%, the same as the transparent so that it forms a well defined line.

  background-image: linear-gradient(
      105deg,
      rgba($color-white, 0.9) 0%,
      rgba($color-white, 0.9) 50%,
      transparent 50%
    ),
    url("/img/nat-10.jpg");
  background-size: 100%; // Similar to cover, but not quite the same, this one assures that the image fills the container in the x direction.

  // height: 50rem; // For testing purposes, otherwise we can't see the image, later we want the content to specify the height
  border-radius: $border-radius;
  box-shadow: 0 1.5rem 4rem rgba($color-black, 0.2);

  @include respond(tab-land) {
    background-image: linear-gradient(
        105deg,
        rgba($color-white, 0.9) 0%,
        rgba($color-white, 0.9) 65%,
        transparent 65%
      ),
      url("/img/nat-10.jpg");
    background-size: cover;
  }

  @include respond(tab-port) {
    background-image: linear-gradient(
        to right,
        rgba($color-white, 0.9) 0%,
        rgba($color-white, 0.9) 100%
      ),
      url("/img/nat-10.jpg");
  }

  &__form {
    width: 50%; // To occupy half of the box
    padding: 6rem;

    @include respond(tab-land) {
      width: 65%;
    }
    @include respond(tab-port) {
      width: 100%;
    }
  }

  // These are the styles for our homepage, the form itself is styled in the components
}
